{
	"id": "e56a505fa0fda573047b47297ba7d678",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/test/Demo.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8;\n\ncontract Shop {\n    address private owner_;\n    mapping(address => uint256) private payments_;\n\n    constructor() {\n        owner_ = msg.sender;\n    }\n\n    function payForItem() public payable {\n        payments_[msg.sender] = msg.value;\n    }\n\n    function widthDrawAll() public {\n        address payable send_to = payable(owner_);\n        address contract_address = address(this);\n        send_to.transfer(contract_address.balance);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/test/Demo.sol": {
				"Shop": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "payForItem",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "widthDrawAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/test/Demo.sol\":55:497  contract Shop {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/test/Demo.sol\":155:205  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/test/Demo.sol\":188:198  msg.sender */\n  caller\n    /* \"contracts/test/Demo.sol\":179:185  owner_ */\n  0x00\n  dup1\n    /* \"contracts/test/Demo.sol\":179:198  owner_ = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/test/Demo.sol\":55:497  contract Shop {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/test/Demo.sol\":55:497  contract Shop {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x13bea460\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xd2976a41\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/test/Demo.sol\":211:298  function payForItem() public payable {... */\n    tag_2:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n        /* \"contracts/test/Demo.sol\":304:495  function widthDrawAll() public {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_6:\n      pop\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/test/Demo.sol\":211:298  function payForItem() public payable {... */\n    tag_5:\n        /* \"contracts/test/Demo.sol\":282:291  msg.value */\n      callvalue\n        /* \"contracts/test/Demo.sol\":258:267  payments_ */\n      0x01\n        /* \"contracts/test/Demo.sol\":258:279  payments_[msg.sender] */\n      0x00\n        /* \"contracts/test/Demo.sol\":268:278  msg.sender */\n      caller\n        /* \"contracts/test/Demo.sol\":258:279  payments_[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/test/Demo.sol\":258:291  payments_[msg.sender] = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/test/Demo.sol\":211:298  function payForItem() public payable {... */\n      jump\t// out\n        /* \"contracts/test/Demo.sol\":304:495  function widthDrawAll() public {... */\n    tag_8:\n        /* \"contracts/test/Demo.sol\":345:368  address payable send_to */\n      0x00\n        /* \"contracts/test/Demo.sol\":379:385  owner_ */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/Demo.sol\":345:386  address payable send_to = payable(owner_) */\n      swap1\n      pop\n        /* \"contracts/test/Demo.sol\":396:420  address contract_address */\n      0x00\n        /* \"contracts/test/Demo.sol\":431:435  this */\n      address\n        /* \"contracts/test/Demo.sol\":396:436  address contract_address = address(this) */\n      swap1\n      pop\n        /* \"contracts/test/Demo.sol\":446:453  send_to */\n      dup2\n        /* \"contracts/test/Demo.sol\":446:462  send_to.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/test/Demo.sol\":446:488  send_to.transfer(contract_address.balance) */\n      0x08fc\n        /* \"contracts/test/Demo.sol\":463:479  contract_address */\n      dup3\n        /* \"contracts/test/Demo.sol\":463:487  contract_address.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"contracts/test/Demo.sol\":446:488  send_to.transfer(contract_address.balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_12\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_12:\n      pop\n        /* \"contracts/test/Demo.sol\":335:495  {... */\n      pop\n      pop\n        /* \"contracts/test/Demo.sol\":304:495  function widthDrawAll() public {... */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220acd4c103fbd9ccd5b44fbb7e4b788ce28e888d824cacbd9cf342689100b76d2064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_16": {
									"entryPoint": null,
									"id": 16,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061014d8061005b5f395ff3fe608060405260043610610028575f3560e01c806313bea4601461002c578063d2976a4114610036575b5f80fd5b61003461004c565b005b348015610041575f80fd5b5061004a610090565b005b3460015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f3090508173ffffffffffffffffffffffffffffffffffffffff166108fc8273ffffffffffffffffffffffffffffffffffffffff163190811502906040515f60405180830381858888f19350505050158015610112573d5f803e3d5ffd5b50505056fea2646970667358221220acd4c103fbd9ccd5b44fbb7e4b788ce28e888d824cacbd9cf342689100b76d2064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x14D DUP1 PUSH2 0x5B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x28 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x13BEA460 EQ PUSH2 0x2C JUMPI DUP1 PUSH4 0xD2976A41 EQ PUSH2 0x36 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x34 PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A PUSH2 0x90 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 ADDRESS SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x112 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC 0xD4 0xC1 SUB 0xFB 0xD9 0xCC 0xD5 0xB4 0x4F 0xBB PUSH31 0x4B788CE28E888D824CACBD9CF342689100B76D2064736F6C634300081A0033 ",
							"sourceMap": "55:442:0:-:0;;;155:50;;;;;;;;;;188:10;179:6;;:19;;;;;;;;;;;;;;;;;;55:442;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@payForItem_28": {
									"entryPoint": 76,
									"id": 28,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@widthDrawAll_53": {
									"entryPoint": 144,
									"id": 53,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610028575f3560e01c806313bea4601461002c578063d2976a4114610036575b5f80fd5b61003461004c565b005b348015610041575f80fd5b5061004a610090565b005b3460015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f3090508173ffffffffffffffffffffffffffffffffffffffff166108fc8273ffffffffffffffffffffffffffffffffffffffff163190811502906040515f60405180830381858888f19350505050158015610112573d5f803e3d5ffd5b50505056fea2646970667358221220acd4c103fbd9ccd5b44fbb7e4b788ce28e888d824cacbd9cf342689100b76d2064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x28 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x13BEA460 EQ PUSH2 0x2C JUMPI DUP1 PUSH4 0xD2976A41 EQ PUSH2 0x36 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x34 PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A PUSH2 0x90 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 ADDRESS SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x112 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC 0xD4 0xC1 SUB 0xFB 0xD9 0xCC 0xD5 0xB4 0x4F 0xBB PUSH31 0x4B788CE28E888D824CACBD9CF342689100B76D2064736F6C634300081A0033 ",
							"sourceMap": "55:442:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;211:87;;;:::i;:::-;;304:191;;;;;;;;;;;;;:::i;:::-;;211:87;282:9;258;:21;268:10;258:21;;;;;;;;;;;;;;;:33;;;;211:87::o;304:191::-;345:23;379:6;;;;;;;;;;;345:41;;396:24;431:4;396:40;;446:7;:16;;:42;463:16;:24;;;446:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;335:160;;304:191::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "66600",
								"executionCost": "24380",
								"totalCost": "90980"
							},
							"external": {
								"payForItem()": "22297",
								"widthDrawAll()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 55,
									"end": 497,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 55,
									"end": 497,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 55,
									"end": 497,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 155,
									"end": 205,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 155,
									"end": 205,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 155,
									"end": 205,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 155,
									"end": 205,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 155,
									"end": 205,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 155,
									"end": 205,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 155,
									"end": 205,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 155,
									"end": 205,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 155,
									"end": 205,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 155,
									"end": 205,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 155,
									"end": 205,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 188,
									"end": 198,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 179,
									"end": 185,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 185,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 179,
									"end": 198,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 179,
									"end": 198,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 179,
									"end": 198,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 179,
									"end": 198,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 179,
									"end": 198,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 179,
									"end": 198,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 179,
									"end": 198,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 179,
									"end": 198,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 179,
									"end": 198,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 179,
									"end": 198,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 179,
									"end": 198,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 179,
									"end": 198,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 179,
									"end": 198,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 179,
									"end": 198,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 179,
									"end": 198,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 179,
									"end": 198,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 179,
									"end": 198,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 198,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55,
									"end": 497,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 55,
									"end": 497,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55,
									"end": 497,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 55,
									"end": 497,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55,
									"end": 497,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 55,
									"end": 497,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55,
									"end": 497,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220acd4c103fbd9ccd5b44fbb7e4b788ce28e888d824cacbd9cf342689100b76d2064736f6c634300081a0033",
									".code": [
										{
											"begin": 55,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 55,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55,
											"end": 497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55,
											"end": 497,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 55,
											"end": 497,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 55,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 55,
											"end": 497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55,
											"end": 497,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 55,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 55,
											"end": 497,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 55,
											"end": 497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "13BEA460"
										},
										{
											"begin": 55,
											"end": 497,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 55,
											"end": 497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55,
											"end": 497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "D2976A41"
										},
										{
											"begin": 55,
											"end": 497,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 55,
											"end": 497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55,
											"end": 497,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 55,
											"end": 497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55,
											"end": 497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55,
											"end": 497,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 211,
											"end": 298,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 211,
											"end": 298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 211,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 211,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 211,
											"end": 298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 211,
											"end": 298,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 211,
											"end": 298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 211,
											"end": 298,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 304,
											"end": 495,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 304,
											"end": 495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 304,
											"end": 495,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 304,
											"end": 495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 304,
											"end": 495,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 304,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 304,
											"end": 495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 304,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 304,
											"end": 495,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 304,
											"end": 495,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 304,
											"end": 495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 304,
											"end": 495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 304,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 304,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 304,
											"end": 495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 304,
											"end": 495,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 304,
											"end": 495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 304,
											"end": 495,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 211,
											"end": 298,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 211,
											"end": 298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 282,
											"end": 291,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 258,
											"end": 267,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 258,
											"end": 279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 278,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 258,
											"end": 279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 258,
											"end": 279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 258,
											"end": 279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 258,
											"end": 279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 258,
											"end": 279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 258,
											"end": 279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 258,
											"end": 279,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 258,
											"end": 279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 258,
											"end": 279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 258,
											"end": 279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 258,
											"end": 279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 258,
											"end": 279,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 258,
											"end": 279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 258,
											"end": 279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 279,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 258,
											"end": 291,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 258,
											"end": 291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 258,
											"end": 291,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 258,
											"end": 291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 211,
											"end": 298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 304,
											"end": 495,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 304,
											"end": 495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 345,
											"end": 368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 379,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 379,
											"end": 385,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 379,
											"end": 385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 379,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 379,
											"end": 385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 379,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 345,
											"end": 386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 345,
											"end": 386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 396,
											"end": 420,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 431,
											"end": 435,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 396,
											"end": 436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 396,
											"end": 436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 446,
											"end": 453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 446,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 446,
											"end": 462,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 446,
											"end": 488,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 463,
											"end": 479,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 463,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 463,
											"end": 487,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 463,
											"end": 487,
											"name": "BALANCE",
											"source": 0
										},
										{
											"begin": 446,
											"end": 488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 446,
											"end": 488,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 446,
											"end": 488,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 446,
											"end": 488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 488,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 446,
											"end": 488,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 446,
											"end": 488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 446,
											"end": 488,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 446,
											"end": 488,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 446,
											"end": 488,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 488,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 446,
											"end": 488,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 446,
											"end": 488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 446,
											"end": 488,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 446,
											"end": 488,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 446,
											"end": 488,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 446,
											"end": 488,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 446,
											"end": 488,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 446,
											"end": 488,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 446,
											"end": 488,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 446,
											"end": 488,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 446,
											"end": 488,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 446,
											"end": 488,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 446,
											"end": 488,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 488,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 446,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 446,
											"end": 488,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 446,
											"end": 488,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 446,
											"end": 488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 446,
											"end": 488,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 488,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 446,
											"end": 488,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 446,
											"end": 488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 446,
											"end": 488,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 446,
											"end": 488,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 446,
											"end": 488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 446,
											"end": 488,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 335,
											"end": 495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 335,
											"end": 495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 304,
											"end": 495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/test/Demo.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"payForItem()": "13bea460",
							"widthDrawAll()": "d2976a41"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"payForItem\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"widthDrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/Demo.sol\":\"Shop\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/test/Demo.sol\":{\"keccak256\":\"0xf11a1f87de8d2c53351bf9010a25d6fda0d2af49a413afae968472b82b39bb37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e0ed43cb85d70288c630e97e66f130ed0156d5a6581f3a1f7462591651d177f\",\"dweb:/ipfs/QmX6CfbfhkQb6kv1yg7XeDx1EKtAdHUrVSHEPVv3j86Nd5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/test/Demo.sol:Shop",
								"label": "owner_",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 7,
								"contract": "contracts/test/Demo.sol:Shop",
								"label": "payments_",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/test/Demo.sol": {
				"ast": {
					"absolutePath": "contracts/test/Demo.sol",
					"exportedSymbols": {
						"Shop": [
							54
						]
					},
					"id": 55,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8"
							],
							"nodeType": "PragmaDirective",
							"src": "32:21:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Shop",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 54,
							"linearizedBaseContracts": [
								54
							],
							"name": "Shop",
							"nameLocation": "64:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "owner_",
									"nameLocation": "91:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 54,
									"src": "75:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "75:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "payments_",
									"nameLocation": "139:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 54,
									"src": "103:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 6,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 4,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "111:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "103:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 5,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "122:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "169:36:0",
										"statements": [
											{
												"expression": {
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 10,
														"name": "owner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "179:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 11,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "188:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "192:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "188:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "179:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "179:19:0"
											}
										]
									},
									"id": 16,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "166:2:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "169:0:0"
									},
									"scope": 54,
									"src": "155:50:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "248:50:0",
										"statements": [
											{
												"expression": {
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 19,
															"name": "payments_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "258:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 22,
														"indexExpression": {
															"expression": {
																"id": 20,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "268:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "272:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "268:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "258:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 23,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "282:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 24,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "286:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "282:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "258:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "258:33:0"
											}
										]
									},
									"functionSelector": "13bea460",
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "payForItem",
									"nameLocation": "220:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "230:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "248:0:0"
									},
									"scope": 54,
									"src": "211:87:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "335:160:0",
										"statements": [
											{
												"assignments": [
													32
												],
												"declarations": [
													{
														"constant": false,
														"id": 32,
														"mutability": "mutable",
														"name": "send_to",
														"nameLocation": "361:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 52,
														"src": "345:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 31,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "345:15:0",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 37,
												"initialValue": {
													"arguments": [
														{
															"id": 35,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "379:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "371:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 33,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "371:8:0",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "371:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "345:41:0"
											},
											{
												"assignments": [
													39
												],
												"declarations": [
													{
														"constant": false,
														"id": 39,
														"mutability": "mutable",
														"name": "contract_address",
														"nameLocation": "404:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 52,
														"src": "396:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 38,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "396:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 44,
												"initialValue": {
													"arguments": [
														{
															"id": 42,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "431:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Shop_$54",
																"typeString": "contract Shop"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_Shop_$54",
																"typeString": "contract Shop"
															}
														],
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "423:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 40,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "423:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "423:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "396:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 48,
																"name": "contract_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "463:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "480:7:0",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "463:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 45,
															"name": "send_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "446:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "454:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "446:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "446:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "446:42:0"
											}
										]
									},
									"functionSelector": "d2976a41",
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "widthDrawAll",
									"nameLocation": "313:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "325:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "335:0:0"
									},
									"scope": 54,
									"src": "304:191:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 55,
							"src": "55:442:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:466:0"
				},
				"id": 0
			}
		}
	}
}